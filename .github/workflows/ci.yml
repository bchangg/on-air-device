name: On Air Device CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      server: ${{ steps.filter.outputs.server }}
      client: ${{ steps.filter.outputs.client }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            server:
              - 'server/**'
            client:
              - 'client/**'

  server:
    needs: changes
    if: ${{ needs.changes.outputs.client == 'true'}}
    name: Server Tests
    defaults:
      run:
        working-directory: "./server"
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set Up Ruby and Install Gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          working-directory: "./server"

      - name: Set Up Test Database
        # https://www.postgresql.org/docs/9.3/libpq-envars.html
        env:
          RAILS_ENV: test
          PGUSER: postgres
          PGPASSWORD: postgres
          PGHOST: localhost
        run: |
          bundle exec rake db:create
          bundle exec rake db:schema:load
      - name: Run RSpec
        env:
          RAILS_ENV: test
          PGUSER: postgres
          PGPASSWORD: postgres
          PGHOST: localhost
        run: bundle exec rspec spec
  client:
    needs: changes
    if: ${{ needs.changes.outputs.client == 'true'}}
    run: node -v
